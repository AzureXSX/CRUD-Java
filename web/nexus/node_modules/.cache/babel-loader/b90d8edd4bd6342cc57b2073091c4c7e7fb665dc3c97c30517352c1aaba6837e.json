{"ast":null,"code":"async function deleteProduct(id, updateProducts) {\n  alert('delete product with id: ' + id);\n  const response = await fetch('/delete/' + id, {\n    method: 'DELETE'\n  });\n  if (response.ok) {\n    var data = await response.json();\n    updateProducts(data);\n    alert('Product deleted');\n  } else {\n    alert('Product not deleted');\n  }\n}\nasync function editProduct(id) {\n  var product = {\n    productName: document.getElementById('name').value,\n    description: document.getElementById('description').value,\n    price: document.getElementById('price').value,\n    images: []\n  };\n\n  // Get the files from the input\n  var fileInput = document.getElementById('file');\n  var files = fileInput.files;\n\n  // Keep track of how many files have been processed\n  var filesProcessed = 0;\n\n  // This function will be called for each file\n  var processFile = function (file, reader) {\n    reader.onload = async function () {\n      var base64String = reader.result.split(\",\")[1];\n      product.images.push(base64String);\n      filesProcessed++;\n      console.log('filesProcessedssed');\n      if (filesProcessed === files.length) {\n        console.log('succes');\n        const response = await fetch('/update/' + id, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(product)\n        });\n        if (response.ok) {\n          alert('Updated product with id: ' + id);\n        } else {\n          alert('product not updated');\n        }\n      }\n    };\n    reader.readAsDataURL(file);\n  };\n\n  // Process each file\n  for (var i = 0; i < files.length; i++) {\n    var reader = new FileReader();\n    processFile(files[i], reader);\n  }\n}\nasync function addProduct() {\n  var product = {\n    productName: document.getElementById('name').value,\n    description: document.getElementById('description').value,\n    price: document.getElementById('price').value,\n    images: []\n  };\n\n  // Get the files from the input\n  var fileInput = document.getElementById('file');\n  var files = fileInput.files;\n\n  // Keep track of how many files have been processed\n  var filesProcessed = 0;\n\n  // This function will be called for each file\n  var processFile = function (file, reader) {\n    reader.onload = async function () {\n      var base64String = reader.result.split(\",\")[1];\n      product.images.push(base64String);\n      filesProcessed++;\n      console.log('filesProcessedssed');\n\n      // If all files have been processed, send the request\n      if (filesProcessed === files.length) {\n        console.log('succes');\n        const response = await fetch('/add', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(product)\n        });\n        if (response.ok) {\n          alert('Added product with');\n        } else {\n          alert('product not added');\n        }\n      }\n    };\n    reader.readAsDataURL(file);\n  };\n\n  // Process each file\n  for (var i = 0; i < files.length; i++) {\n    var reader = new FileReader();\n    processFile(files[i], reader);\n  }\n}\nexport { deleteProduct };\nexport { editProduct };\nexport { addProduct };","map":{"version":3,"names":["deleteProduct","id","updateProducts","alert","response","fetch","method","ok","data","json","editProduct","product","productName","document","getElementById","value","description","price","images","fileInput","files","filesProcessed","processFile","file","reader","onload","base64String","result","split","push","console","log","length","headers","body","JSON","stringify","readAsDataURL","i","FileReader","addProduct"],"sources":["C:/Users/Azure/Desktop/WebJava/web/nexus/src/js/buttonEvents.js"],"sourcesContent":["\r\n\r\nasync function deleteProduct(id, updateProducts) {\r\n    alert('delete product with id: ' + id)\r\n\r\n    const response = await fetch('/delete/' + id, {\r\n        method: 'DELETE',\r\n    });\r\n\r\n    if (response.ok) {\r\n        var data = await response.json();\r\n        updateProducts(data);\r\n        alert('Product deleted')\r\n    } else {\r\n        alert('Product not deleted')\r\n    }\r\n}\r\n\r\nasync function editProduct(id) {\r\n\r\n    var product = {\r\n        productName: document.getElementById('name').value,\r\n        description: document.getElementById('description').value,\r\n        price: document.getElementById('price').value,\r\n        images: [],\r\n    }\r\n    \r\n    // Get the files from the input\r\n    var fileInput = document.getElementById('file');\r\n    var files = fileInput.files;\r\n    \r\n    // Keep track of how many files have been processed\r\n    var filesProcessed = 0;\r\n    \r\n    // This function will be called for each file\r\n    var processFile = function(file, reader) {\r\n        reader.onload = async function() {\r\n            var base64String = reader.result.split(\",\")[1];\r\n            product.images.push(base64String);\r\n    \r\n            filesProcessed++;\r\n\r\n            console.log('filesProcessedssed');\r\n    \r\n            if (filesProcessed === files.length) {\r\n\r\n                console.log('succes');\r\n                const response = await fetch('/update/' + id, {\r\n                    method: 'PUT',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(product),\r\n                });\r\n            \r\n                if (response.ok) {\r\n                    alert('Updated product with id: ' + id)\r\n                } else {\r\n                    alert('product not updated')\r\n                }\r\n            }\r\n        }\r\n    \r\n        reader.readAsDataURL(file);\r\n    }\r\n    \r\n    // Process each file\r\n    for (var i = 0; i < files.length; i++) {\r\n        var reader = new FileReader();\r\n        processFile(files[i], reader);\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\nasync function addProduct() {\r\n\r\n\r\n    var product = {\r\n        productName: document.getElementById('name').value,\r\n        description: document.getElementById('description').value,\r\n        price: document.getElementById('price').value,\r\n        images: [],\r\n    }\r\n    \r\n    // Get the files from the input\r\n    var fileInput = document.getElementById('file');\r\n    var files = fileInput.files;\r\n    \r\n    // Keep track of how many files have been processed\r\n    var filesProcessed = 0;\r\n    \r\n    // This function will be called for each file\r\n    var processFile = function(file, reader) {\r\n        reader.onload = async function() {\r\n            var base64String = reader.result.split(\",\")[1];\r\n            product.images.push(base64String);\r\n    \r\n            filesProcessed++;\r\n\r\n            console.log('filesProcessedssed');\r\n    \r\n            // If all files have been processed, send the request\r\n            if (filesProcessed === files.length) {\r\n\r\n                console.log('succes');\r\n                const response = await fetch('/add', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(product),\r\n                });\r\n                if (response.ok) {\r\n                    alert('Added product with')\r\n                } else {\r\n                    alert('product not added')\r\n                }\r\n            }\r\n        }\r\n    \r\n        reader.readAsDataURL(file);\r\n    }\r\n    \r\n    // Process each file\r\n    for (var i = 0; i < files.length; i++) {\r\n        var reader = new FileReader();\r\n        processFile(files[i], reader);\r\n    }\r\n\r\n   \r\n}\r\n\r\nexport {deleteProduct}\r\nexport {editProduct}\r\nexport {addProduct}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}