{"ast":null,"code":"async function deleteProduct(id, updateProducts) {\n  alert('delete product with id: ' + id);\n  const response = await fetch('/delete/' + id, {\n    method: 'DELETE'\n  });\n  if (response.ok) {\n    var data = await response.json();\n    updateProducts(data);\n    alert('Product deleted');\n  } else {\n    alert('Product not deleted');\n  }\n}\nasync function editProduct(id) {\n  var product = {\n    productName: document.getElementById('name').value,\n    description: document.getElementById('description').value,\n    price: document.getElementById('price').value\n  };\n  const response = await fetch('/update/' + id, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(product)\n  });\n  if (response.ok) {\n    alert('Updated product with id: ' + id);\n  } else {\n    alert('product not updated');\n  }\n}\nasync function addProduct() {\n  var product = {\n    productName: document.getElementById('name').value,\n    description: document.getElementById('description').value,\n    price: document.getElementById('price').value,\n    images: []\n  };\n\n  // Get the file from the input\n  var fileInput = document.getElementById('file');\n  var file = fileInput.files[0];\n\n  // Create a new FileReader object\n  var reader = new FileReader();\n\n  // Set the onload function, which gets called when the file has been read\n  reader.onload = async function () {\n    // The result attribute contains the data as a URL representing the file's data as a base64 encoded string\n    product.images.push(reader.result);\n    const response = await fetch('/add', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(product)\n    });\n  };\n\n  // Start reading the file\n  // This will trigger the onload function when it's done\n  reader.readAsDataURL(file);\n  if (response.ok) {\n    alert('Added product with');\n  } else {\n    alert('product not added');\n  }\n}\nexport { deleteProduct };\nexport { editProduct };\nexport { addProduct };","map":{"version":3,"names":["deleteProduct","id","updateProducts","alert","response","fetch","method","ok","data","json","editProduct","product","productName","document","getElementById","value","description","price","headers","body","JSON","stringify","addProduct","images","fileInput","file","files","reader","FileReader","onload","push","result","readAsDataURL"],"sources":["C:/Users/Azure/Desktop/WebJava/web/nexus/src/js/buttonEvents.js"],"sourcesContent":["\r\n\r\nasync function deleteProduct(id, updateProducts) {\r\n    alert('delete product with id: ' + id)\r\n\r\n    const response = await fetch('/delete/' + id, {\r\n        method: 'DELETE',\r\n    });\r\n\r\n    if (response.ok) {\r\n        var data = await response.json();\r\n        updateProducts(data);\r\n        alert('Product deleted')\r\n    } else {\r\n        alert('Product not deleted')\r\n    }\r\n}\r\n\r\nasync function editProduct(id) {\r\n\r\n\r\n    var product = {\r\n        productName: document.getElementById('name').value,\r\n        description: document.getElementById('description').value,\r\n        price: document.getElementById('price').value,\r\n    }\r\n\r\n    const response = await fetch('/update/' + id, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(product),\r\n    });\r\n\r\n    if (response.ok) {\r\n        alert('Updated product with id: ' + id)\r\n    } else {\r\n        alert('product not updated')\r\n    }\r\n}\r\n\r\n\r\nasync function addProduct() {\r\n\r\n\r\n    var product = {\r\n        productName: document.getElementById('name').value,\r\n        description: document.getElementById('description').value,\r\n        price: document.getElementById('price').value,\r\n        images: [],\r\n    }\r\n    \r\n    // Get the file from the input\r\n    var fileInput = document.getElementById('file');\r\n    var file = fileInput.files[0];\r\n    \r\n    // Create a new FileReader object\r\n    var reader = new FileReader();\r\n    \r\n    // Set the onload function, which gets called when the file has been read\r\n    reader.onload = async function() {\r\n        // The result attribute contains the data as a URL representing the file's data as a base64 encoded string\r\n        product.images.push(reader.result);\r\n    \r\n        const response = await fetch('/add', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(product),\r\n        });\r\n    }\r\n    \r\n    // Start reading the file\r\n    // This will trigger the onload function when it's done\r\n    reader.readAsDataURL(file);\r\n\r\n    if (response.ok) {\r\n        alert('Added product with')\r\n    } else {\r\n        alert('product not added')\r\n    }\r\n}\r\n\r\nexport {deleteProduct}\r\nexport {editProduct}\r\nexport {addProduct}"],"mappings":"AAEA,eAAeA,aAAaA,CAACC,EAAE,EAAEC,cAAc,EAAE;EAC7CC,KAAK,CAAC,0BAA0B,GAAGF,EAAE,CAAC;EAEtC,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,UAAU,GAAGJ,EAAE,EAAE;IAC1CK,MAAM,EAAE;EACZ,CAAC,CAAC;EAEF,IAAIF,QAAQ,CAACG,EAAE,EAAE;IACb,IAAIC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAChCP,cAAc,CAACM,IAAI,CAAC;IACpBL,KAAK,CAAC,iBAAiB,CAAC;EAC5B,CAAC,MAAM;IACHA,KAAK,CAAC,qBAAqB,CAAC;EAChC;AACJ;AAEA,eAAeO,WAAWA,CAACT,EAAE,EAAE;EAG3B,IAAIU,OAAO,GAAG;IACVC,WAAW,EAAEC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAACC,KAAK;IAClDC,WAAW,EAAEH,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACC,KAAK;IACzDE,KAAK,EAAEJ,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACC;EAC5C,CAAC;EAED,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,UAAU,GAAGJ,EAAE,EAAE;IAC1CK,MAAM,EAAE,KAAK;IACbY,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,OAAO;EAChC,CAAC,CAAC;EAEF,IAAIP,QAAQ,CAACG,EAAE,EAAE;IACbJ,KAAK,CAAC,2BAA2B,GAAGF,EAAE,CAAC;EAC3C,CAAC,MAAM;IACHE,KAAK,CAAC,qBAAqB,CAAC;EAChC;AACJ;AAGA,eAAemB,UAAUA,CAAA,EAAG;EAGxB,IAAIX,OAAO,GAAG;IACVC,WAAW,EAAEC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAACC,KAAK;IAClDC,WAAW,EAAEH,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACC,KAAK;IACzDE,KAAK,EAAEJ,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACC,KAAK;IAC7CQ,MAAM,EAAE;EACZ,CAAC;;EAED;EACA,IAAIC,SAAS,GAAGX,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;EAC/C,IAAIW,IAAI,GAAGD,SAAS,CAACE,KAAK,CAAC,CAAC,CAAC;;EAE7B;EACA,IAAIC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;;EAE7B;EACAD,MAAM,CAACE,MAAM,GAAG,kBAAiB;IAC7B;IACAlB,OAAO,CAACY,MAAM,CAACO,IAAI,CAACH,MAAM,CAACI,MAAM,CAAC;IAElC,MAAM3B,QAAQ,GAAG,MAAMC,KAAK,CAAC,MAAM,EAAE;MACjCC,MAAM,EAAE,MAAM;MACdY,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,OAAO;IAChC,CAAC,CAAC;EACN,CAAC;;EAED;EACA;EACAgB,MAAM,CAACK,aAAa,CAACP,IAAI,CAAC;EAE1B,IAAIrB,QAAQ,CAACG,EAAE,EAAE;IACbJ,KAAK,CAAC,oBAAoB,CAAC;EAC/B,CAAC,MAAM;IACHA,KAAK,CAAC,mBAAmB,CAAC;EAC9B;AACJ;AAEA,SAAQH,aAAa;AACrB,SAAQU,WAAW;AACnB,SAAQY,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}